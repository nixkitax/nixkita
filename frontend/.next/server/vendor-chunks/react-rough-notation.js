"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-rough-notation";
exports.ids = ["vendor-chunks/react-rough-notation"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-rough-notation/dist/module.es.js":
/*!*************************************************************!*\
  !*** ./node_modules/react-rough-notation/dist/module.es.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RoughNotation: () => (/* binding */ RoughNotation),\n/* harmony export */   RoughNotationGroup: () => (/* binding */ RoughNotationGroup)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var rough_notation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rough-notation */ \"(ssr)/./node_modules/rough-notation/lib/rough-notation.esm.js\");\n/* __next_internal_client_entry_do_not_use__ RoughNotation,RoughNotationGroup auto */ \n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ var __assign = function() {\n    __assign = Object.assign || function __assign(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n}\nfunction __spreadArrays() {\n    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;\n    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];\n    return r;\n}\nvar GroupContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\nvar GroupDispatchContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\nvar initialState = {\n    annotations: []\n};\nfunction reducer(state, _a) {\n    var type = _a.type, payload = _a.payload;\n    switch(type){\n        case \"ADD\":\n            {\n                var annotations = __spreadArrays(state.annotations, [\n                    payload\n                ]);\n                var annotationsToSort = annotations.reduce(function(toSort, annotation) {\n                    var newAnnotations = __assign({}, toSort);\n                    if (typeof annotation.order === \"number\") {\n                        newAnnotations.withOrder = __spreadArrays(newAnnotations.withOrder, [\n                            annotation\n                        ]).sort(function(a, b) {\n                            return a.order - b.order;\n                        });\n                    } else {\n                        newAnnotations.withoutOrder = __spreadArrays(newAnnotations.withoutOrder, [\n                            annotation\n                        ]);\n                    }\n                    return newAnnotations;\n                }, {\n                    withOrder: [],\n                    withoutOrder: []\n                });\n                return __assign(__assign({}, state), {\n                    annotations: __spreadArrays(annotationsToSort.withOrder, annotationsToSort.withoutOrder)\n                });\n            }\n        default:\n            return state;\n    }\n}\nvar RoughNotationGroup = function(_a) {\n    var children = _a.children, show = _a.show;\n    var _b = (0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)(reducer, initialState), state = _b[0], dispatch = _b[1];\n    var timeouts = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        var nextTimeout = 0;\n        state.annotations.forEach(function(_a) {\n            var annotation = _a.annotation;\n            if (show) {\n                var timeout = setTimeout(function() {\n                    annotation.show();\n                }, nextTimeout);\n                timeouts.current.push(timeout);\n                nextTimeout += annotation.getAnnotation().animationDuration || 800;\n            } else {\n                annotation.hide();\n                timeouts.current.forEach(function(timeout) {\n                    clearTimeout(timeout);\n                    timeouts.current = timeouts.current.filter(function(currentTimeout) {\n                        return currentTimeout !== timeout;\n                    });\n                });\n            }\n        });\n    }, [\n        show,\n        state,\n        timeouts\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(GroupContext.Provider, {\n        value: state\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(GroupDispatchContext.Provider, {\n        value: dispatch\n    }, children));\n};\nvar useGroupContext = function(annotation, order) {\n    var context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(GroupContext);\n    var dispatch = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(GroupDispatchContext);\n    var initialProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({\n        annotation: annotation,\n        context: context,\n        dispatch: dispatch,\n        order: order\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        var _a = initialProps.current, currentAnnotation = _a.annotation, currentContext = _a.context, currentDispatch = _a.dispatch, currentOrder = _a.order;\n        if (!currentContext) {\n            return;\n        }\n        if (currentDispatch) {\n            return currentDispatch({\n                type: \"ADD\",\n                payload: {\n                    annotation: currentAnnotation,\n                    order: currentOrder\n                }\n            });\n        }\n    }, []);\n};\nvar RoughNotation = function(_a) {\n    var _b = _a.animate, animate = _b === void 0 ? true : _b, _c = _a.animationDelay, animationDelay = _c === void 0 ? 0 : _c, _d = _a.animationDuration, animationDuration = _d === void 0 ? 800 : _d, brackets = _a.brackets, children = _a.children, color = _a.color, _e = _a.customElement, customElement = _e === void 0 ? \"span\" : _e, getAnnotationObject = _a.getAnnotationObject, _f = _a.iterations, iterations = _f === void 0 ? 2 : _f, _g = _a.multiline, multiline = _g === void 0 ? false : _g, order = _a.order, _h = _a.padding, padding = _h === void 0 ? 5 : _h, _j = _a.show, show = _j === void 0 ? false : _j, _k = _a.strokeWidth, strokeWidth = _k === void 0 ? 1 : _k, _l = _a.type, type = _l === void 0 ? \"underline\" : _l, rest = __rest(_a, [\n        \"animate\",\n        \"animationDelay\",\n        \"animationDuration\",\n        \"brackets\",\n        \"children\",\n        \"color\",\n        \"customElement\",\n        \"getAnnotationObject\",\n        \"iterations\",\n        \"multiline\",\n        \"order\",\n        \"padding\",\n        \"show\",\n        \"strokeWidth\",\n        \"type\"\n    ]);\n    var element = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var annotation = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    var innerVars = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({\n        playing: false,\n        timeout: null\n    });\n    var initialOptions = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({\n        animate: animate,\n        animationDuration: animationDuration,\n        brackets: brackets,\n        color: color,\n        getAnnotationObject: getAnnotationObject,\n        iterations: iterations,\n        multiline: multiline,\n        padding: padding,\n        strokeWidth: strokeWidth,\n        type: type\n    });\n    var showAnnotation = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function() {\n        if (!innerVars.current.timeout) {\n            innerVars.current.timeout = window.setTimeout(function() {\n                var _a, _b;\n                innerVars.current.playing = true;\n                (_b = (_a = annotation.current) === null || _a === void 0 ? void 0 : _a.show) === null || _b === void 0 ? void 0 : _b.call(_a);\n                window.setTimeout(function() {\n                    innerVars.current.playing = false;\n                    innerVars.current.timeout = null;\n                }, animationDuration);\n            }, animationDelay);\n        }\n    }, [\n        animationDelay,\n        animationDuration\n    ]);\n    var hideAnnotation = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function() {\n        var _a, _b;\n        (_b = (_a = annotation.current) === null || _a === void 0 ? void 0 : _a.hide) === null || _b === void 0 ? void 0 : _b.call(_a);\n        innerVars.current.playing = false;\n        if (innerVars.current.timeout) {\n            clearTimeout(innerVars.current.timeout);\n            innerVars.current.timeout = null;\n        }\n    }, []);\n    var getAnnotation = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function() {\n        return annotation.current;\n    }, [\n        annotation\n    ]);\n    useGroupContext({\n        getAnnotation: getAnnotation,\n        show: showAnnotation,\n        hide: hideAnnotation\n    }, typeof order === \"string\" ? parseInt(order) : order);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        var options = initialOptions.current;\n        var getAnnotationObjectFromOptions = options.getAnnotationObject;\n        annotation.current = (0,rough_notation__WEBPACK_IMPORTED_MODULE_1__.annotate)(element.current, options);\n        if (getAnnotationObjectFromOptions) {\n            getAnnotationObjectFromOptions(annotation.current);\n        }\n        return function() {\n            var _a, _b;\n            (_b = (_a = annotation.current) === null || _a === void 0 ? void 0 : _a.remove) === null || _b === void 0 ? void 0 : _b.call(_a);\n        };\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        if (show) {\n            showAnnotation();\n        } else {\n            hideAnnotation();\n        }\n    }, [\n        annotation,\n        show,\n        animationDelay,\n        innerVars,\n        animationDuration,\n        showAnnotation,\n        hideAnnotation\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        if (annotation.current) {\n            annotation.current.animate = animate;\n            annotation.current.animationDuration = animationDuration;\n            annotation.current.color = color;\n            annotation.current.strokeWidth = strokeWidth;\n            annotation.current.padding = padding;\n        }\n    }, [\n        annotation,\n        animate,\n        animationDuration,\n        color,\n        strokeWidth,\n        padding\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(customElement, __assign({\n        ref: element\n    }, rest), children);\n};\n //# sourceMappingURL=module.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-rough-notation/dist/module.es.js\n");

/***/ })

};
;